#set -g default-terminal "screen-256color"

# Use <C-a> instead of the default <C-b> as Tmux prefix
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Options to enable mouse support in Tmux
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Escape time for libtermkey
# (see https://github.com/neovim/neovim/issues/2036):
set -sg escape-time 10

# Act more like vi:
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
unbind p
bind p paste-buffer
# Edited for move to tmux 3.9
bind -T vi-copy v send -X begin-selection
bind -T vi-copy y send -X copy-selection

# Switch between first and last key
# Thanks to https://superuser.com/questions/429558/how-to-switch-between-two-latest-windows-in-tmux
bind-key C-a last-window

# Had to do brew install reattach-to-user-namespace first
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# Setup 'v' to begin selection as in Vim
bind-key -T vi-copy v send -X begin-selection
bind-key -T vi-copy y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T vi-copy Enter
bind-key -T vi-copy Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Define my custom menu bar
# status bar colors
set -g status-bg black
set -g status-fg white

# alignment settings
set-option -g status-justify centre

# status left options
set-option -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[fg=green]]'
set-option -g status-left-length 20

# window list options
setw -g automatic-rename on
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=colour230]#W#[fg=dim]#F'
set -g base-index 1

# status right options
set -g status-right '#[fg=cyan,bold] #(hostname |cut -d "." -f1)î‚° #(if [ -d  ${HOME}/fbsource ]; then echo "fbcode|"; fi)#(if [ -d  ${HOME}/configerator ]; then echo "configerator|"; fi)#(if [ -d  ${HOME}/www ]; then echo "www|"; fi)#[fg=red]%H:%M %d-%b-%y#[default]'


# For Tmux >= 2.1
set -g mouse on 

# I want to be notified when a command finishes: https://stackoverflow.com/questions/23755063/alert-in-tmux-when-a-process-completes
set-window-option -g visual-bell on
set-window-option -g bell-action other

# Let the visual bell be on for longer
set -g display-time 4000

# be sure to see note* below
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'

